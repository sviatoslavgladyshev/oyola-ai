rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    // Users collection - users can read/write their own data
    match /users/{userId} {
      // Allow read if signed in and it's their own document
      allow read: if isOwner(userId);
      
      // Allow create when signing up (user must be authenticated)
      allow create: if isSignedIn() && request.auth.uid == userId;
      
      // Allow update if it's their own document
      allow update: if isOwner(userId);
      
      // Don't allow delete (optional - remove this line if you want users to delete their accounts)
      allow delete: if isOwner(userId);
    }
    
    // Properties collection (if you add this feature later)
    match /properties/{propertyId} {
      // Anyone can read properties
      allow read: if true;
      
      // Only authenticated users can create properties
      allow create: if isSignedIn();
      
      // Only the property owner can update/delete
      allow update, delete: if isSignedIn() && 
        request.auth.uid == resource.data.ownerId;
    }
    
    // Offers collection (if you add this feature later)
    match /offers/{offerId} {
      // Users can read offers they created or received
      allow read: if isSignedIn() && 
        (request.auth.uid == resource.data.buyerId || 
         request.auth.uid == resource.data.ownerId);
      
      // Only authenticated users can create offers
      allow create: if isSignedIn() && 
        request.auth.uid == request.resource.data.buyerId;
      
      // Buyers and owners can update offers (for status changes)
      allow update: if isSignedIn() && 
        (request.auth.uid == resource.data.buyerId || 
         request.auth.uid == resource.data.ownerId);
    }
    
    // Default: deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

